plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'jacoco'
	id 'org.openapi.generator' version '7.7.0'
}

group = 'ubb.graduation24'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

jacoco {
	toolVersion = '0.8.8'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.2.0'

//	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

	// protobuf
	implementation 'net.devh:grpc-spring-boot-starter:3.1.0.RELEASE'
	implementation 'com.google.protobuf:protobuf-java:3.25.3'
	implementation 'io.grpc:grpc-netty-shaded:1.62.2'
	implementation 'io.grpc:grpc-protobuf:1.62.2'
	implementation 'io.grpc:grpc-stub:1.62.2'
	implementation 'io.grpc:grpc-core:1.62.2'

	runtimeOnly 'io.grpc:grpc-services:1.62.2'
	implementation 'com.google.protobuf:protobuf-java-util:3.25.3'
	implementation 'io.grpc:grpc-inprocess:1.62.2'
	testImplementation 'io.grpc:grpc-testing:1.62.2'
	implementation 'io.grpc:grpc-protobuf-lite:1.62.2' // For using lightweight protobuf messages

	// to solve the Generated class dependency in the java file generated from proto
	implementation 'javax.annotation:javax.annotation-api:1.3.2'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

	// Unit tests
	testImplementation 'org.springframework.boot:spring-boot-starter-test:3.3.2'
	testImplementation 'org.mockito:mockito-core:5.12.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
	testImplementation 'org.slf4j:slf4j-api'
	testImplementation 'ch.qos.logback:logback-classic'
}

// test with reports and coverage
test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport // Generate the report after tests are run
}

jacocoTestReport {
	dependsOn test // Make sure tests run before generating the report
	reports {
		html.required.set(true) // Generate HTML report
		xml.required.set(true)  // Optionally generate XML report
	}
	sourceDirectories.setFrom(files(['src/main/java']))
	classDirectories.setFrom(
			files([
					fileTree(dir: 'build/classes/java/main').matching {
						include '**/ubb/graduation24/immopal/auction_service/service/**'
					}
			])
	)
	executionData.setFrom(fileTree(dir: 'build', includes: ['jacoco/test.exec']))
}

tasks.withType(JavaCompile) {
	options.compilerArgs += ['-Xlint:unchecked']
}
